version: '3.4'

services:
#Customer
  customerdb:
    container_name: customer-db
    image: mcr.microsoft.com/mssql/server:2019-latest
    environment:
      SA_PASSWORD: "password@12345#"
      ACCEPT_EULA: "Y"
    #networks:
    #  - backend
    ports:
      - "8001:1433"
  customerwebapi:
    container_name: customer.webapi
    image: ${DOCKER_REGISTRY-}customerwebapi
    build:
      context: .
      dockerfile: CustomerWebApi/Dockerfile 
    environment:
      - "ConnectionStrings:DefaultConnection=Server=customerdb;Database=customer;User Id=sa;Password=password@12345#;TrustServerCertificate=True;"
    ports:
      - "8002:80"
#Product
  productdb:
    container_name: product-db
    image: mysql:8.0.32-oracle
    environment:
      MYSQL_ROOT_PASSWORD: "password@12345#"
    #networks:
    #  - backend
    ports:
      - "8003:3306"

  productwebapi:
    container_name: product.webapi
    image: ${DOCKER_REGISTRY-}productwebapi
    build:
      context: .
      dockerfile: ProductWebApi/Dockerfile
    environment:
      - "ConnectionStrings:DefaultConnection=Server=productdb;Database=product;User Id=root;Password=password@12345#;"
    ports:
      - "8004:80"

#Order

  orderdb:
    container_name: order-db
    image: mongo
    #restart: always
    ports:
      - "8005:27017"
    #volumes:
    #  - mongodb_data:/data/db

  
  orderwebapi:
    container_name: order.webapi
    image: ${DOCKER_REGISTRY-}orderwebapi
    build:
      context: .
      dockerfile: OrderWebApi/Dockerfile
    ports:
      - "8006:80"

